// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file mock/v1/ssh.proto (package mock.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BundleChunk, Command, Empty, Host, HostConfig, Query } from "./ssh_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Service
 *
 * @generated from service mock.v1.MockSSHService
 */
export const MockSSHService = {
  typeName: "mock.v1.MockSSHService",
  methods: {
    /**
     * @generated from rpc mock.v1.MockSSHService.New
     */
    new: {
      name: "New",
      I: HostConfig,
      O: HostConfig,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mock.v1.MockSSHService.Lookup
     */
    lookup: {
      name: "Lookup",
      I: Query,
      O: HostConfig,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc mock.v1.MockSSHService.Commands
     */
    commands: {
      name: "Commands",
      I: Host,
      O: Command,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc mock.v1.MockSSHService.Filesystem
     */
    filesystem: {
      name: "Filesystem",
      I: Host,
      O: BundleChunk,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc mock.v1.MockSSHService.Free
     */
    free: {
      name: "Free",
      I: Host,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;


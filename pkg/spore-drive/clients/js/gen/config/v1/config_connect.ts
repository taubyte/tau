// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file config/v1/config.proto (package config.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Bundle, BundleConfig, Config, Empty, Op, Return, Source, SourceUpload } from "./config_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Service
 *
 * @generated from service config.v1.ConfigService
 */
export const ConfigService = {
  typeName: "config.v1.ConfigService",
  methods: {
    /**
     * @generated from rpc config.v1.ConfigService.New
     */
    new: {
      name: "New",
      I: Empty,
      O: Config,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc config.v1.ConfigService.Load
     */
    load: {
      name: "Load",
      I: Source,
      O: Config,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc config.v1.ConfigService.Upload
     */
    upload: {
      name: "Upload",
      I: SourceUpload,
      O: Config,
      kind: MethodKind.ClientStreaming,
    },
    /**
     * @generated from rpc config.v1.ConfigService.Download
     */
    download: {
      name: "Download",
      I: BundleConfig,
      O: Bundle,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc config.v1.ConfigService.Commit
     */
    commit: {
      name: "Commit",
      I: Config,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc config.v1.ConfigService.Free
     */
    free: {
      name: "Free",
      I: Config,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc config.v1.ConfigService.Do
     */
    do: {
      name: "Do",
      I: Op,
      O: Return,
      kind: MethodKind.Unary,
    },
  }
} as const;


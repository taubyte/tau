# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: mock/v1/ssh.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'mock/v1/ssh.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11mock/v1/ssh.proto\x12\x07mock.v1\"9\n\x07\x43ommand\x12\x14\n\x05index\x18\x01 \x01(\x05R\x05index\x12\x18\n\x07\x63ommand\x18\x03 \x01(\tR\x07\x63ommand\"\x1a\n\x04Host\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\"\x8b\x02\n\nHostConfig\x12!\n\x04host\x18\x01 \x01(\x0b\x32\r.mock.v1.HostR\x04host\x12\x12\n\x04port\x18\x02 \x01(\x05R\x04port\x12\x18\n\x07workdir\x18\x03 \x01(\tR\x07workdir\x12\x1e\n\npassphrase\x18\x04 \x01(\tR\npassphrase\x12\x1f\n\x0bprivate_key\x18\x05 \x01(\x0cR\nprivateKey\x12#\n\rauth_username\x18\x06 \x01(\tR\x0c\x61uthUsername\x12#\n\rauth_password\x18\x07 \x01(\tR\x0c\x61uthPassword\x12!\n\x0c\x61uth_privkey\x18\x08 \x01(\x0cR\x0b\x61uthPrivkey\"9\n\x05Query\x12\x14\n\x04name\x18\x01 \x01(\tH\x00R\x04name\x12\x14\n\x04port\x18\x02 \x01(\x05H\x00R\x04portB\x04\n\x02\x65q\"!\n\x0b\x42undleChunk\x12\x12\n\x04\x64\x61ta\x18\x01 \x01(\x0cR\x04\x64\x61ta\"\x07\n\x05\x45mpty2\xfb\x01\n\x0eMockSSHService\x12/\n\x03New\x12\x13.mock.v1.HostConfig\x1a\x13.mock.v1.HostConfig\x12-\n\x06Lookup\x12\x0e.mock.v1.Query\x1a\x13.mock.v1.HostConfig\x12-\n\x08\x43ommands\x12\r.mock.v1.Host\x1a\x10.mock.v1.Command0\x01\x12\x33\n\nFilesystem\x12\r.mock.v1.Host\x1a\x14.mock.v1.BundleChunk0\x01\x12%\n\x04\x46ree\x12\r.mock.v1.Host\x1a\x0e.mock.v1.EmptyB\x95\x01\n\x0b\x63om.mock.v1B\x08SshProtoP\x01Z?github.com/taubyte/tau/pkg/spore-drive/proto/gen/mock/v1;mockv1\xa2\x02\x03MXX\xaa\x02\x07Mock.V1\xca\x02\x07Mock\\V1\xe2\x02\x13Mock\\V1\\GPBMetadata\xea\x02\x08Mock::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'mock.v1.ssh_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\013com.mock.v1B\010SshProtoP\001Z?github.com/taubyte/tau/pkg/spore-drive/proto/gen/mock/v1;mockv1\242\002\003MXX\252\002\007Mock.V1\312\002\007Mock\\V1\342\002\023Mock\\V1\\GPBMetadata\352\002\010Mock::V1'
  _globals['_COMMAND']._serialized_start=30
  _globals['_COMMAND']._serialized_end=87
  _globals['_HOST']._serialized_start=89
  _globals['_HOST']._serialized_end=115
  _globals['_HOSTCONFIG']._serialized_start=118
  _globals['_HOSTCONFIG']._serialized_end=385
  _globals['_QUERY']._serialized_start=387
  _globals['_QUERY']._serialized_end=444
  _globals['_BUNDLECHUNK']._serialized_start=446
  _globals['_BUNDLECHUNK']._serialized_end=479
  _globals['_EMPTY']._serialized_start=481
  _globals['_EMPTY']._serialized_end=488
  _globals['_MOCKSSHSERVICE']._serialized_start=491
  _globals['_MOCKSSHSERVICE']._serialized_end=742
# @@protoc_insertion_point(module_scope)

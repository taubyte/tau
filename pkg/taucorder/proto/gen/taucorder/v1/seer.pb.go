// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: taucorder/v1/seer.proto

package taucorderv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Data Structures
type NodesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node    *Node  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *NodesListRequest) Reset() {
	*x = NodesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taucorder_v1_seer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodesListRequest) ProtoMessage() {}

func (x *NodesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taucorder_v1_seer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodesListRequest.ProtoReflect.Descriptor instead.
func (*NodesListRequest) Descriptor() ([]byte, []int) {
	return file_taucorder_v1_seer_proto_rawDescGZIP(), []int{0}
}

func (x *NodesListRequest) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *NodesListRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type NodesUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Peer string `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *NodesUsageRequest) Reset() {
	*x = NodesUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taucorder_v1_seer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodesUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodesUsageRequest) ProtoMessage() {}

func (x *NodesUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taucorder_v1_seer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodesUsageRequest.ProtoReflect.Descriptor instead.
func (*NodesUsageRequest) Descriptor() ([]byte, []int) {
	return file_taucorder_v1_seer_proto_rawDescGZIP(), []int{1}
}

func (x *NodesUsageRequest) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *NodesUsageRequest) GetPeer() string {
	if x != nil {
		return x.Peer
	}
	return ""
}

type LocationArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Distance float32   `protobuf:"fixed32,2,opt,name=distance,proto3" json:"distance,omitempty"`
}

func (x *LocationArea) Reset() {
	*x = LocationArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taucorder_v1_seer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationArea) ProtoMessage() {}

func (x *LocationArea) ProtoReflect() protoreflect.Message {
	mi := &file_taucorder_v1_seer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationArea.ProtoReflect.Descriptor instead.
func (*LocationArea) Descriptor() ([]byte, []int) {
	return file_taucorder_v1_seer_proto_rawDescGZIP(), []int{2}
}

func (x *LocationArea) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *LocationArea) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taucorder_v1_seer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_taucorder_v1_seer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_taucorder_v1_seer_proto_rawDescGZIP(), []int{3}
}

func (x *Location) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type PeerLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer     *Peer     `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Location *Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *PeerLocation) Reset() {
	*x = PeerLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taucorder_v1_seer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerLocation) ProtoMessage() {}

func (x *PeerLocation) ProtoReflect() protoreflect.Message {
	mi := &file_taucorder_v1_seer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerLocation.ProtoReflect.Descriptor instead.
func (*PeerLocation) Descriptor() ([]byte, []int) {
	return file_taucorder_v1_seer_proto_rawDescGZIP(), []int{4}
}

func (x *PeerLocation) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PeerLocation) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type LocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	// Types that are assignable to Filter:
	//
	//	*LocationRequest_All
	//	*LocationRequest_Area
	//	*LocationRequest_Peers
	Filter isLocationRequest_Filter `protobuf_oneof:"filter"`
}

func (x *LocationRequest) Reset() {
	*x = LocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taucorder_v1_seer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationRequest) ProtoMessage() {}

func (x *LocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taucorder_v1_seer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationRequest.ProtoReflect.Descriptor instead.
func (*LocationRequest) Descriptor() ([]byte, []int) {
	return file_taucorder_v1_seer_proto_rawDescGZIP(), []int{5}
}

func (x *LocationRequest) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (m *LocationRequest) GetFilter() isLocationRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *LocationRequest) GetAll() bool {
	if x, ok := x.GetFilter().(*LocationRequest_All); ok {
		return x.All
	}
	return false
}

func (x *LocationRequest) GetArea() *LocationArea {
	if x, ok := x.GetFilter().(*LocationRequest_Area); ok {
		return x.Area
	}
	return nil
}

func (x *LocationRequest) GetPeers() *Peers {
	if x, ok := x.GetFilter().(*LocationRequest_Peers); ok {
		return x.Peers
	}
	return nil
}

type isLocationRequest_Filter interface {
	isLocationRequest_Filter()
}

type LocationRequest_All struct {
	All bool `protobuf:"varint,2,opt,name=all,proto3,oneof"`
}

type LocationRequest_Area struct {
	Area *LocationArea `protobuf:"bytes,3,opt,name=area,proto3,oneof"`
}

type LocationRequest_Peers struct {
	Peers *Peers `protobuf:"bytes,4,opt,name=peers,proto3,oneof"`
}

func (*LocationRequest_All) isLocationRequest_Filter() {}

func (*LocationRequest_Area) isLocationRequest_Filter() {}

func (*LocationRequest_Peers) isLocationRequest_Filter() {}

type PeerUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer          *Peer    `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Types         []string `protobuf:"bytes,3,rep,name=types,proto3" json:"types,omitempty"`
	Address       string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Timestamp     int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UsedMem       int64    `protobuf:"varint,6,opt,name=used_mem,json=usedMem,proto3" json:"used_mem,omitempty"`
	TotalMem      int64    `protobuf:"varint,7,opt,name=total_mem,json=totalMem,proto3" json:"total_mem,omitempty"`
	FreeMem       int64    `protobuf:"varint,8,opt,name=free_mem,json=freeMem,proto3" json:"free_mem,omitempty"`
	TotalCpu      int64    `protobuf:"varint,9,opt,name=total_cpu,json=totalCpu,proto3" json:"total_cpu,omitempty"`
	CpuCount      int64    `protobuf:"varint,10,opt,name=cpu_count,json=cpuCount,proto3" json:"cpu_count,omitempty"`
	CpuUser       int64    `protobuf:"varint,11,opt,name=cpu_user,json=cpuUser,proto3" json:"cpu_user,omitempty"`
	CpuNice       int64    `protobuf:"varint,12,opt,name=cpu_nice,json=cpuNice,proto3" json:"cpu_nice,omitempty"`
	CpuSystem     int64    `protobuf:"varint,13,opt,name=cpu_system,json=cpuSystem,proto3" json:"cpu_system,omitempty"`
	CpuIdle       int64    `protobuf:"varint,14,opt,name=cpu_idle,json=cpuIdle,proto3" json:"cpu_idle,omitempty"`
	CpuIowait     int64    `protobuf:"varint,15,opt,name=cpu_iowait,json=cpuIowait,proto3" json:"cpu_iowait,omitempty"`
	CpuIrq        int64    `protobuf:"varint,16,opt,name=cpu_irq,json=cpuIrq,proto3" json:"cpu_irq,omitempty"`
	CpuSoftirq    int64    `protobuf:"varint,17,opt,name=cpu_softirq,json=cpuSoftirq,proto3" json:"cpu_softirq,omitempty"`
	CpuSteal      int64    `protobuf:"varint,18,opt,name=cpu_steal,json=cpuSteal,proto3" json:"cpu_steal,omitempty"`
	CpuGuest      int64    `protobuf:"varint,19,opt,name=cpu_guest,json=cpuGuest,proto3" json:"cpu_guest,omitempty"`
	CpuGuestNice  int64    `protobuf:"varint,20,opt,name=cpu_guest_nice,json=cpuGuestNice,proto3" json:"cpu_guest_nice,omitempty"`
	CpuStatCount  int64    `protobuf:"varint,21,opt,name=cpu_stat_count,json=cpuStatCount,proto3" json:"cpu_stat_count,omitempty"`
	TotalDisk     int64    `protobuf:"varint,22,opt,name=total_disk,json=totalDisk,proto3" json:"total_disk,omitempty"`
	FreeDisk      int64    `protobuf:"varint,23,opt,name=free_disk,json=freeDisk,proto3" json:"free_disk,omitempty"`
	UsedDisk      int64    `protobuf:"varint,24,opt,name=used_disk,json=usedDisk,proto3" json:"used_disk,omitempty"`
	AvailableDisk int64    `protobuf:"varint,25,opt,name=available_disk,json=availableDisk,proto3" json:"available_disk,omitempty"`
}

func (x *PeerUsage) Reset() {
	*x = PeerUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taucorder_v1_seer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerUsage) ProtoMessage() {}

func (x *PeerUsage) ProtoReflect() protoreflect.Message {
	mi := &file_taucorder_v1_seer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerUsage.ProtoReflect.Descriptor instead.
func (*PeerUsage) Descriptor() ([]byte, []int) {
	return file_taucorder_v1_seer_proto_rawDescGZIP(), []int{6}
}

func (x *PeerUsage) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *PeerUsage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PeerUsage) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *PeerUsage) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PeerUsage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PeerUsage) GetUsedMem() int64 {
	if x != nil {
		return x.UsedMem
	}
	return 0
}

func (x *PeerUsage) GetTotalMem() int64 {
	if x != nil {
		return x.TotalMem
	}
	return 0
}

func (x *PeerUsage) GetFreeMem() int64 {
	if x != nil {
		return x.FreeMem
	}
	return 0
}

func (x *PeerUsage) GetTotalCpu() int64 {
	if x != nil {
		return x.TotalCpu
	}
	return 0
}

func (x *PeerUsage) GetCpuCount() int64 {
	if x != nil {
		return x.CpuCount
	}
	return 0
}

func (x *PeerUsage) GetCpuUser() int64 {
	if x != nil {
		return x.CpuUser
	}
	return 0
}

func (x *PeerUsage) GetCpuNice() int64 {
	if x != nil {
		return x.CpuNice
	}
	return 0
}

func (x *PeerUsage) GetCpuSystem() int64 {
	if x != nil {
		return x.CpuSystem
	}
	return 0
}

func (x *PeerUsage) GetCpuIdle() int64 {
	if x != nil {
		return x.CpuIdle
	}
	return 0
}

func (x *PeerUsage) GetCpuIowait() int64 {
	if x != nil {
		return x.CpuIowait
	}
	return 0
}

func (x *PeerUsage) GetCpuIrq() int64 {
	if x != nil {
		return x.CpuIrq
	}
	return 0
}

func (x *PeerUsage) GetCpuSoftirq() int64 {
	if x != nil {
		return x.CpuSoftirq
	}
	return 0
}

func (x *PeerUsage) GetCpuSteal() int64 {
	if x != nil {
		return x.CpuSteal
	}
	return 0
}

func (x *PeerUsage) GetCpuGuest() int64 {
	if x != nil {
		return x.CpuGuest
	}
	return 0
}

func (x *PeerUsage) GetCpuGuestNice() int64 {
	if x != nil {
		return x.CpuGuestNice
	}
	return 0
}

func (x *PeerUsage) GetCpuStatCount() int64 {
	if x != nil {
		return x.CpuStatCount
	}
	return 0
}

func (x *PeerUsage) GetTotalDisk() int64 {
	if x != nil {
		return x.TotalDisk
	}
	return 0
}

func (x *PeerUsage) GetFreeDisk() int64 {
	if x != nil {
		return x.FreeDisk
	}
	return 0
}

func (x *PeerUsage) GetUsedDisk() int64 {
	if x != nil {
		return x.UsedDisk
	}
	return 0
}

func (x *PeerUsage) GetAvailableDisk() int64 {
	if x != nil {
		return x.AvailableDisk
	}
	return 0
}

var File_taucorder_v1_seer_proto protoreflect.FileDescriptor

var file_taucorder_v1_seer_proto_rawDesc = []byte{
	0x0a, 0x17, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x74, 0x61, 0x75, 0x63, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x54, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x61,
	0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x22, 0x5e, 0x0a, 0x0c, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x12, 0x32, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61,
	0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x08, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22,
	0x6a, 0x0a, 0x0c, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x75, 0x63,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x01, 0x0a, 0x0f,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x61, 0x75, 0x63,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x72, 0x65, 0x61, 0x48, 0x00, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x2b, 0x0a,
	0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74,
	0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x48, 0x00, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0xf1, 0x05, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x72, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6d, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4d, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x65, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x70, 0x75, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x70, 0x75, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x70, 0x75,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x70, 0x75,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f, 0x6e, 0x69, 0x63, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x70, 0x75, 0x4e, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x70, 0x75, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x70, 0x75, 0x49, 0x64, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x70, 0x75,
	0x5f, 0x69, 0x6f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x70, 0x75, 0x49, 0x6f, 0x77, 0x61, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x5f,
	0x69, 0x72, 0x71, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x70, 0x75, 0x49, 0x72,
	0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x69, 0x72, 0x71,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x53, 0x6f, 0x66, 0x74, 0x69,
	0x72, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6c, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x70, 0x75, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x70, 0x75, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x70, 0x75, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x69, 0x63, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x70, 0x75, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x69,
	0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x70, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x70, 0x75, 0x53,
	0x74, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f,
	0x64, 0x69, 0x73, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65,
	0x44, 0x69, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73,
	0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64, 0x44, 0x69, 0x73,
	0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64,
	0x69, 0x73, 0x6b, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x32, 0xd7, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1e, 0x2e, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x30, 0x01, 0x12, 0x41, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1f, 0x2e, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x30, 0x01, 0x42, 0xb7, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x61, 0x75, 0x63, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x53, 0x65, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x61, 0x75, 0x62, 0x79, 0x74, 0x65, 0x2f, 0x74, 0x61, 0x75, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x3b, 0x74, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x54, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x54, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x0c, 0x54, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x18, 0x54, 0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x54,
	0x61, 0x75, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_taucorder_v1_seer_proto_rawDescOnce sync.Once
	file_taucorder_v1_seer_proto_rawDescData = file_taucorder_v1_seer_proto_rawDesc
)

func file_taucorder_v1_seer_proto_rawDescGZIP() []byte {
	file_taucorder_v1_seer_proto_rawDescOnce.Do(func() {
		file_taucorder_v1_seer_proto_rawDescData = protoimpl.X.CompressGZIP(file_taucorder_v1_seer_proto_rawDescData)
	})
	return file_taucorder_v1_seer_proto_rawDescData
}

var file_taucorder_v1_seer_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_taucorder_v1_seer_proto_goTypes = []any{
	(*NodesListRequest)(nil),  // 0: taucorder.v1.NodesListRequest
	(*NodesUsageRequest)(nil), // 1: taucorder.v1.NodesUsageRequest
	(*LocationArea)(nil),      // 2: taucorder.v1.LocationArea
	(*Location)(nil),          // 3: taucorder.v1.Location
	(*PeerLocation)(nil),      // 4: taucorder.v1.PeerLocation
	(*LocationRequest)(nil),   // 5: taucorder.v1.LocationRequest
	(*PeerUsage)(nil),         // 6: taucorder.v1.PeerUsage
	(*Node)(nil),              // 7: taucorder.v1.Node
	(*Peer)(nil),              // 8: taucorder.v1.Peer
	(*Peers)(nil),             // 9: taucorder.v1.Peers
}
var file_taucorder_v1_seer_proto_depIdxs = []int32{
	7,  // 0: taucorder.v1.NodesListRequest.node:type_name -> taucorder.v1.Node
	7,  // 1: taucorder.v1.NodesUsageRequest.node:type_name -> taucorder.v1.Node
	3,  // 2: taucorder.v1.LocationArea.location:type_name -> taucorder.v1.Location
	8,  // 3: taucorder.v1.PeerLocation.peer:type_name -> taucorder.v1.Peer
	3,  // 4: taucorder.v1.PeerLocation.location:type_name -> taucorder.v1.Location
	7,  // 5: taucorder.v1.LocationRequest.node:type_name -> taucorder.v1.Node
	2,  // 6: taucorder.v1.LocationRequest.area:type_name -> taucorder.v1.LocationArea
	9,  // 7: taucorder.v1.LocationRequest.peers:type_name -> taucorder.v1.Peers
	8,  // 8: taucorder.v1.PeerUsage.peer:type_name -> taucorder.v1.Peer
	0,  // 9: taucorder.v1.SeerService.List:input_type -> taucorder.v1.NodesListRequest
	1,  // 10: taucorder.v1.SeerService.Usage:input_type -> taucorder.v1.NodesUsageRequest
	5,  // 11: taucorder.v1.SeerService.Location:input_type -> taucorder.v1.LocationRequest
	8,  // 12: taucorder.v1.SeerService.List:output_type -> taucorder.v1.Peer
	6,  // 13: taucorder.v1.SeerService.Usage:output_type -> taucorder.v1.PeerUsage
	4,  // 14: taucorder.v1.SeerService.Location:output_type -> taucorder.v1.PeerLocation
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_taucorder_v1_seer_proto_init() }
func file_taucorder_v1_seer_proto_init() {
	if File_taucorder_v1_seer_proto != nil {
		return
	}
	file_taucorder_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_taucorder_v1_seer_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NodesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taucorder_v1_seer_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*NodesUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taucorder_v1_seer_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*LocationArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taucorder_v1_seer_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taucorder_v1_seer_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PeerLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taucorder_v1_seer_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*LocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taucorder_v1_seer_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PeerUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_taucorder_v1_seer_proto_msgTypes[5].OneofWrappers = []any{
		(*LocationRequest_All)(nil),
		(*LocationRequest_Area)(nil),
		(*LocationRequest_Peers)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_taucorder_v1_seer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_taucorder_v1_seer_proto_goTypes,
		DependencyIndexes: file_taucorder_v1_seer_proto_depIdxs,
		MessageInfos:      file_taucorder_v1_seer_proto_msgTypes,
	}.Build()
	File_taucorder_v1_seer_proto = out.File
	file_taucorder_v1_seer_proto_rawDesc = nil
	file_taucorder_v1_seer_proto_goTypes = nil
	file_taucorder_v1_seer_proto_depIdxs = nil
}

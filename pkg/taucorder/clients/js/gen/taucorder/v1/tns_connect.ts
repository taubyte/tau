// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file taucorder/v1/tns.proto (package taucorder.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { TNSFetchRequest, TNSListRequest, TNSLookupRequest, TNSObject, TNSPath, TNSPaths } from "./tns_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { ConsensusState, ConsensusStateRequest, Node } from "./common_pb.js";

/**
 * Service
 *
 * @generated from service taucorder.v1.TNSService
 */
export const TNSService = {
  typeName: "taucorder.v1.TNSService",
  methods: {
    /**
     * @generated from rpc taucorder.v1.TNSService.List
     */
    list: {
      name: "List",
      I: TNSListRequest,
      O: TNSPath,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc taucorder.v1.TNSService.Fetch
     */
    fetch: {
      name: "Fetch",
      I: TNSFetchRequest,
      O: TNSObject,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc taucorder.v1.TNSService.Lookup
     */
    lookup: {
      name: "Lookup",
      I: TNSLookupRequest,
      O: TNSPaths,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc taucorder.v1.TNSService.State
     */
    state: {
      name: "State",
      I: ConsensusStateRequest,
      O: ConsensusState,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc taucorder.v1.TNSService.States
     */
    states: {
      name: "States",
      I: Node,
      O: ConsensusState,
      kind: MethodKind.ServerStreaming,
    },
  }
} as const;

